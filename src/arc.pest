WHITESPACE      = _{ " " | "\t" | NEWLINE }
program         =  { SOI ~ expr ~ EOI }
function        =  { "function" ~ ident ~ "(" ~ param ~ ("," ~ param)* ~ ")" ~ expr }
param           =  { ident }
ident           = @{ (ASCII_ALPHA|"_") ~ (ASCII_ALPHANUMERIC|"_")* }
expr            =  { let_expr | op_expr }
op_expr         = _{ primary ~ ( binop ~ primary )* }
  primary       = _{ lit | unary | term }
  lit           =  { lit_i32 | lit_bool }
    lit_i32     = @{ ASCII_NONZERO_DIGIT ~ ASCII_DIGIT* }
    lit_bool    = @{ "true" | "false" }
  unary         =  { (not | neg) ~ primary }
    not         =  { "!" }
    neg         =  { "-" }
  term          =  { ident }
  binop         = _{ add | sub | mul | div }
    add         =  { "+" }
    sub         =  { "-" }
    mul         =  { "*" }
    div         =  { "/" }
    pow         =  { "^" }
let_expr        =  { "let" ~ binding ~ ";" ~ expr }
  binding       =  { symbol ~ "=" ~ op_expr }
    symbol      =  { ident ~ (":" ~ type_id)? }
type_id         = _{ scalar | builder }
  scalar        = _{ s_i32 | s_bool }
    s_i32       =  { "i32" }
    s_bool      =  { "bool" }
  builder       = _{ b_appender | b_merger }
    b_appender  =  { "appender" ~ "[" ~ type_id ~ "]" }
    b_merger    =  { "merger" ~ "[" ~ binop ~ "]" }
